import React, {Component} from 'react';
import {Header, Segment, Card, Container, Image, Button, Icon, Label, Grid} from 'semantic-ui-react'
import AnchorLink from 'react-anchor-link-smooth-scroll'
import Flipcard from '@kennethormandy/react-flipcard'

import '@kennethormandy/react-flipcard/dist/Flipcard.css'


export default class Home extends Component {
    constructor(props) {
        super(props);
        this.state = {
            cardHover: false,
            flipped: false
        }
        this.content = [
            {
                code: "cr",
                title: "Collective Reports",
                image: "collectivereports.jpg",
                link: "https://www.collectivereports.com",
                content: [
                    "Lead developer of financial management and employee accountability software solution Collective Reports, \
                    built in collaboration with Sheppard Village Dental. \
                    The software is currently in use across various Dental Practices in Canada. \
                    The software has had 3 major iterations while I was learning how to develop and \
                    deploy large scale web applications.",
                    "Built using the Python framework Django and hosted on a PostgreSQL Database. \
                    Prototyped and built frontend using HTML, Bootstrap, CSS, JQuery, and AngularJS. \
                    Hosted on AWS RDS and Heroku, version controlled through Github."
                ],
                items: [
                    "Django", "PostgreSQL", "Heroku", "AngularJS", "Git/Github", "Staging Pipeline", "Elasticsearch"
                ],
                itemClass: "frameworks",
                github: null
            },
            {
                code: "lot",
                title: "Live On Twitch",
                image: "liveontwitch.png",
                link: "https://www.liveontwitch.app",
                content: [
                    "Built a service LiveOnTwitch in which automatically updates a user's Twitter Username \
                    and or Bio when theyâ€™re live on Twitch through the use of Twitch Hooks. Built with a \
                    Django REST based backend and a React Frontend, liveontwitch uses Oauth2 for authentication of Twitch and Twitter",
                    "Both Staging and Production servers hosted on DigitalOcean, with Production\
                    server running on a Kubernetes Cluster. The production deployment pipeline utilizes CirleCI \
                    for Continuous Integration and Deployment by pulling the master git branch, rebuilding the docker \
                    images and deploying to managed Kubernetes. The containers within the Cluster include Django, Celery, \
                    Nginx, Redis, PostgreSQL."
                ],
                items: [
                    "Kubernetes",
                    "Django",
                    "React",
                    "Docker",
                    "CircleCI",
                    "Celery",
                    "Redis",
                    "Nginx",
                    "Git / Github",
                    "Adobe Xd",
                    "Oauth2",
                    "REST API",
                    "Twitter API",
                    "Twitch API"
                ],
                itemClass: "platforms",
                github: "https://github.com/gdmurray/liveontwitch-backend"
            }, {
                code: "ei",
                title: "Espresso Insights Backend",
                image: "espresso.png",
                link: "",
                content: [
                    "Lead development of the Django REST API backend for the Epresso Capital client facing Borrower Portal. \
                    The backend integrates with Quickbooks and other accounting systems to evaluate financial metrics. \
                    Implemented a Machine Learning + Natural Language Processing based accounting statement classifier into \
                    production workflow with Tensorflow and Keras. The backend contains systems such as websockets, celery \
                    asynchronous and scheduled tasks, api versioning, and autogenerated documentation. Production deployment \
                    and orchestration pipeline managed through Heroku and development environments hosted on secured AWS EC2 Instances."
                ],
                items: [
                    "Django", "Angular", "AWS", "Git/Github", "Heroku", "Oauth2", "REST API", "Keras NLP", "Celery", "Redis", "Websockets"
                ],
                itemClass: "languages",
                github: false,
            }, {
                code: "shout",
                title: "Shout iOS App",
                image: "shout.png",
                link: "https://github.com/CP317S18/iOS",
                content: [
                    "In a Third year Software Engineering project I was the iOS Team Lead, \
                managing team of 12 designers and developers to build a Bluetooth Low Energy based chat app. \
                Developed a majority of the core iOS Bluetooth cross platform compatibility protocol code as well \
                as the Views Code for each function of the app."
                ],
                items: [
                    "Swift", "iOS", "Objective C", "Project Mgmt", "Git/Github", "Bluetooth", "BLE Tech"
                ],
                itemClass: "tools",
                github: "https://github.com/CP317S18/iOS/tree/master/shout"
            }
        ]

    this.state = {
        content: this.content
    }
}

handleHover = () => {
    this.setState(prevState => ({
        cardHover: !prevState.cardHover
    }));
}

renderGithub(github){
    if(github){
        return (
            <div className="project__buttons">
                <Label>
                    <a href={github} target="_blank"><Icon name='github'/> Github </a>
                </Label>
            </div>
        )
    }
}
renderItemLists(content)
{
    var l = [];
    for (var i in content) {
        l.push(<li key={i + '-' + content[i]}>{content[i]}</li>);
    }
    return l;
}

renderContent(project)
{
    var l = [];
    for (var c in project.content) {
        l.push(<p key={project.code + '-' + c}>{project.content[c]}</p>);
    }
    return l;
}

renderProjects()
{
    var projects = [];
    const {content} = this.state
    for (var p in content) {
        var project = content[p];
        projects.push(
            <Container className={"gradient " + project.code} key={"container-"+project.code}>
                <div className="project">
                    <a className="project__image" href={project.link} target="_blank">
                        <img width={400} src={process.env.PUBLIC_URL + "/" + project.image}/>
                    </a>
                    <div className="project__info">
                        <Header as='h2' content={project.title}/>
                        {this.renderContent(project)}
                        <ul className={"item-list " + project.itemClass}>
                            {this.renderItemLists(project.items)}
                        </ul>
                    </div>
                    {this.renderGithub(project.github)}
                </div>
            </Container>
        )
    }
    return projects;
}

render()
{
    return (
        <div>
            <nav className="site-navbar">
                <ul className="nav">
                    <li>
                        <AnchorLink href='#projects'> Projects </AnchorLink>
                    </li>
                    <li>
                        <a href="https://drive.google.com/file/d/1LWWcUZ05P1whhENzkBhuvEHXzid-FtXr/view?usp=sharing"
                        target="_blank"
                        > Resume </a>
                    </li>
                    <li>
                        <a href="https://github.com/gdmurray" target="_blank" > Github </a>
                    </li>
                    <li>
                        <AnchorLink href='#contact'> Contact </AnchorLink>
                    </li>
                </ul>
                <img className="nav__image" src={process.env.PUBLIC_URL + "/waves.svg"}/>
            </nav>
            <Container textAlign='center' className="intro-section">
                <Header as='h1' textAlign='center'>
                    Hi, I'm Greg Murray
                </Header>
            </Container>

            <Container className="card-container">
                <Flipcard flipped={this.state.flipped}>
                <Card fluid centered className={this.state.cardHover ? "intro-card raised" : "intro-card"}
                onMouseEnter={this.handleHover} onMouseLeave={this.handleHover}
                onClick={e => this.setState({flipped: !this.state.flipped})}>
                    <Card.Header as="h4">Full Stack Software Engineer</Card.Header>
                        <Card.Description>
                            <p>I am a 4th year Business and Computer Science student
                            at Wilfrid Laurier University and I am currently seeking opportunities for an internship
                            in Software Engineering for the <span>Fall 2019 Term. </span>
                            My experience ranges from school projects to full production environments.</p>
                        </Card.Description>
                </Card>
                <Card fluid centered className={this.state.cardHover ? "intro-card raised" : "intro-card"}
                onMouseEnter={this.handleHover} onMouseLeave={this.handleHover}
                onClick={e => this.setState({flipped: !this.state.flipped})}>
                    <Card.Header as="h4">About Me</Card.Header>
                    <Card.Description>
                        <Image className="my-image" src={process.env.PUBLIC_URL + "/me.jpg"} />
                        Born and raised in Toronto ðŸ‡¨ðŸ‡¦, I have spent most of my life with a passion 
                        for tech and all things nerdy. My hobbies include outdoor activies like hiking, climbing, biking,
                        and skiing. I am currently living in Waterloo, Ontario, where I will be finishing both degrees in August of 2020.
                    </Card.Description>
                    
                </Card>
                </Flipcard>
            </Container>

            <Container>
                <Header className="huge section-header" textAlign="center">
                    Skills
                    <hr className="header_underline"/>
                </Header>
                <Header as="h3">
                    Languages
                </Header>
                <ul className="item-list languages main">
                    <li>Python</li>
                    <li>Java</li>
                    <li>Javascript</li>
                    <li>Swift</li>
                    <li>HTML5/CSS3</li>
                    <li>SQL</li>
                    <li>C/C++</li>
                    <li>PHP</li>
                </ul>
                <Header as="h3">
                    Frameworks
                </Header>
                <ul className="item-list frameworks main">
                    <li>Django</li>
                    <li>Flask</li>
                    <li>React</li>
                    <li>Angular</li>
                    <li>Wordpress</li>
                </ul>
                <Header as="h3">
                    Platforms
                </Header>
                <ul className="item-list platforms main">
                    <li>AWS</li>
                    <li>DigitalOcean</li>
                    <li>Heroku</li>
                    <li>Salesforce</li>
                    <li>Unix</li>
                    <li>PostgreSQL</li>
                    <li>MySQL</li>
                </ul>
                <Header as="h3">
                    Tools
                </Header>
                <ul className="item-list tools main">
                    <li>Kubernetes</li>
                    <li>Docker</li>
                    <li>Docker Swarm</li>
                    <li>Keras</li>
                    <li>Ansible</li>
                    <li>CircleCI</li>
                    <li>Git/Github</li>
                    <li>Adobe Xd</li>
                    <li>Supervisor</li>
                    <li>JIRA</li>
                </ul>
                <Header id="projects" style={{paddingTop: '8rem'}} className="huge section-header" textAlign="center">
                    Projects
                    <hr className="header_underline"/>
                </Header>
            </Container>
            {this.renderProjects()}
            <footer id="contact" className="footer">
                <Header as="h2" content="Contact" className="centered"/>
                <ul className="contact-list">
                    <li>
                        <a href="mailto:gd-murray@hotmail.com" >
                            <Icon name="at" />  gd-murray@hotmail.com
                        </a>
                    </li>
                    <li>
                        <a href="https://www.linkedin.com/in/gregmurray6640/" target="_blank" >
                            <Icon name="linkedin" />  Greg Murray
                        </a>
                    </li>
                    <li>
                        <a href="https://twitter.com/gdmurray6640" target="_blank" >
                            <Icon name="twitter" />  gdmurray6640
                        </a>
                    </li>
                    <li>
                        <a href="https://github.com/gdmurray" target="_blank">
                            <Icon name="github" />  gdmurray
                        </a>
                    </li>
                </ul>
            </footer>
        </div>
    )
}
}